---
// Project data
const projects = [
  {
    id: 1,
    title: "Immersive 3D Portfolio",
    description:
      "A portfolio website utilizing ThreeJS and interactive 3D elements to showcase creative work.",
    image: "/projects/project1.jpg",
    tags: ["ThreeJS", "WebGL", "GSAP"],
    link: "#",
  },
  {
    id: 2,
    title: "E-Commerce App",
    description:
      "A fully functional e-commerce platform with product management, cart, and checkout system.",
    image: "/projects/project2.jpg",
    tags: ["React", "Node.js", "MongoDB"],
    link: "#",
  },
  {
    id: 3,
    title: "AI Content Generator",
    description:
      "Web application that uses machine learning to generate unique content based on user inputs.",
    image: "/projects/project3.jpg",
    tags: ["Python", "TensorFlow", "React"],
    link: "#",
  },
  {
    id: 4,
    title: "Social Media Dashboard",
    description:
      "Analytics dashboard showing metrics from multiple social media platforms in real-time.",
    image: "/projects/project4.jpg",
    tags: ["Vue.js", "D3.js", "Firebase"],
    link: "#",
  },
  {
    id: 5,
    title: "Mobile Fitness App",
    description:
      "Cross-platform fitness application with workout tracking, nutrition plans, and social features.",
    image: "/projects/project5.jpg",
    tags: ["React Native", "GraphQL", "AWS"],
    link: "#",
  },
];
---

<section id="projects" class="projects-section">
  <div class="container">
    <div class="section-header">
      <h2>Recent Projects</h2>
      <p>A selection of my recent work and side projects</p>
    </div>

    <div class="projects-grid">
      {
        projects.map((project, index) => (
          <div class="project-card" data-id={project.id} data-index={index}>
            <div class="project-image">
              <img src={project.image} alt={project.title} />
            </div>
            <div class="project-content">
              <h3>{project.title}</h3>
              <p>{project.description}</p>
              <div class="project-tags">
                {project.tags.map((tag) => (
                  <span class="tag">{tag}</span>
                ))}
              </div>
              <a href={project.link} class="btn project-btn">
                Learn More
              </a>
            </div>
          </div>
        ))
      }
    </div>
  </div>
</section>

<style>
  .projects-section {
    background-color: var(--secondary-color);
    position: relative;
    min-height: 100vh;
    display: flex;
    align-items: center;
    padding: 5rem 0;
    z-index: 2;
    will-change: opacity, transform;
    opacity: 1;
    transform: translateY(0);
  }

  .section-header {
    text-align: center;
    margin-bottom: 4rem;
  }

  .section-header h2 {
    margin-bottom: 1rem;
    position: relative;
    display: inline-block;
  }

  .section-header h2::after {
    content: "";
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    width: 50px;
    height: 3px;
    background-color: var(--accent-color);
  }

  /* Magazine-style grid layout */
  .projects-grid {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 1.5rem;
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;
  }

  /* Create organized but still visually interesting cards */
  .project-card {
    position: relative;
    border-radius: 8px;
    background-color: white;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
    overflow: hidden;
    transition: all 0.4s ease;
    opacity: 0;
    transform: translateY(20px);
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  /* First row layout */
  .project-card[data-index="0"] {
    grid-column: span 2;
    grid-row: span 1;
  }

  .project-card[data-index="1"] {
    grid-column: span 2;
    grid-row: span 1;
  }

  /* Second row layout */
  .project-card[data-index="2"] {
    grid-column: span 1;
    grid-row: span 1;
  }

  .project-card[data-index="3"] {
    grid-column: span 2;
    grid-row: span 1;
  }

  .project-card[data-index="4"] {
    grid-column: span 1;
    grid-row: span 1;
  }

  .project-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.12);
  }

  .project-image {
    height: 200px;
    overflow: hidden;
  }

  /* Featured projects get slightly larger images */
  .project-card[data-index="0"] .project-image,
  .project-card[data-index="3"] .project-image {
    height: 240px;
  }

  .project-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.5s ease;
  }

  .project-content {
    padding: 1.5rem;
  }

  .project-content h3 {
    font-size: 1.25rem;
    margin-bottom: 0.75rem;
  }

  .project-content p {
    font-size: 0.9rem;
    margin-bottom: 1rem;
    color: #666;
  }

  .project-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-bottom: 1.5rem;
  }

  .tag {
    font-size: 0.75rem;
    padding: 0.25rem 0.5rem;
    background-color: #f0f0f0;
    border-radius: 4px;
    color: #555;
  }

  .project-btn {
    font-size: 0.9rem;
    padding: 0.5rem 1rem;
  }

  /* Responsive adjustments */
  @media (max-width: 992px) {
    .projects-grid {
      grid-template-columns: repeat(2, 1fr);
      gap: 1.5rem;
    }

    .project-card[data-index="0"],
    .project-card[data-index="1"],
    .project-card[data-index="2"],
    .project-card[data-index="3"],
    .project-card[data-index="4"] {
      grid-column: span 1;
      grid-row: span 1;
    }
  }

  @media (max-width: 576px) {
    .projects-grid {
      grid-template-columns: 1fr;
      gap: 1.5rem;
    }

    .project-image {
      height: 200px;
    }
  }
</style>

<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";

  gsap.registerPlugin(ScrollTrigger);

  document.addEventListener("DOMContentLoaded", () => {
    // Animate projects in a staggered fashion when scrolled into view
    const projectCards = document.querySelectorAll(".project-card");

    ScrollTrigger.batch(projectCards, {
      interval: 0.1, // time between batches
      batchMax: 3, // maximum batch size
      onEnter: (batch) => {
        gsap.to(batch, {
          opacity: 1,
          y: 0,
          stagger: 0.15,
          duration: 0.8,
          ease: "power4.out",
        });
      },
      start: "top 85%",
    });
  });
</script>
